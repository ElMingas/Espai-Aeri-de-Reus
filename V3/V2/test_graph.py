from graph import *
from airspace import *

def creategraph_1 ():
 AddNavPoint('Cat_nav.txt')
 AddNavSegment('Cat_seg.txt')
 g = Airspace(NavPoint_lict, NavSegment_list, Airport_list)

 '''addnode(g, node("A", 1, 20))
 addnode(g, node("B", 8, 17))
 addnode(g, node("C", 15, 20))
 addnode(g, node("D", 18, 15))
 addnode(g, node("E", 2, 4))
 addnode(g, node("F", 6, 5))
 addnode(g, node("G", 12, 12))
 addnode(g, node("H", 10, 3))
 addnode(g, node("I", 19, 1))
 addnode(g, node("J", 13, 5))
 addnode(g, node("K", 3, 15))
 addnode(g, node("L", 4, 10))'''



 '''#test adicional
 addnode(g, Node("A", 5, 80))
 addnode(g, Node("B", 40, 70))
 addnode(g, Node("C", 75, 80))
 addnode(g, Node("D", 90, 60))
 addnode(g, Node("E", -10, 20))
 addnode(g, Node("F", 30, 25))
 addnode(g, Node("G", 60, 60))
 addnode(g, Node("H", 50, 15))
 addnode(g, Node("I", 95, 5))
 addnode(g, Node("J", 65, 25))
 addnode(g, Node("K", 15, 70))
 addnode(g, Node("L", 20, 50))
 addnode(g, Node("ja", 10, 20))
 addnode(g, Node("jaja", -20, 40))
 addnode(g, Node("ji", -10, 5))
 addnode(g, Node("jiji", 5, 45))
 addnode(g, Node("M", 20, 90))
 addnode(g, Node("N", 28, 100))
 addnode(g, Node("O", 44, 90))
 addnode(g, Node("P", 56, 40))
 addnode(g, Node("Q", 68, 54))
 addnode(g, Node("R", 36, 34))
 addnode(g, Node("S", 12, 40))
 addnode(g, Node("T", 64, 20))
 addnode(g, Node("U", 32, 4))
 addnode(g, Node("V", 48, 74))

 # Los segmentos originales
 addsegment(g, "AB", "A", "B")
 addsegment(g, "AE", "A", "E")
 addsegment(g, "AK", "A", "K")
 addsegment(g, "BA", "B", "A")
 addsegment(g, "BC", "B", "C")
 addsegment(g, "BF", "B", "F")
 addsegment(g, "BK", "B", "K")
 addsegment(g, "BG", "B", "G")
 addsegment(g, "CD", "C", "D")
 addsegment(g, "CG", "C", "G")
 addsegment(g, "DG", "D", "G")
 addsegment(g, "DH", "D", "H")
 addsegment(g, "DI", "D", "I")
 addsegment(g, "EF", "E", "F")
 addsegment(g, "FL", "F", "L")
 addsegment(g, "GB", "G", "B")
 addsegment(g, "GF", "G", "F")
 addsegment(g, "GH", "G", "H")
 addsegment(g, "ID", "I", "D")
 addsegment(g, "IJ", "I", "J")
 addsegment(g, "JI", "J", "I")
 addsegment(g, "KA", "K", "A")
 addsegment(g, "KL", "K", "L")
 addsegment(g, "LK", "L", "K")
 addsegment(g, "LF", "L", "F")

 addsegment(g, "jajaji", "jaja", "ji")
 addsegment(g, "jija", "ji", "ja")
 addsegment(g, "jijijaja", "jiji", "jaja")
 addsegment(g, "jijija", "jiji", "ja")
 addsegment(g, "jaA", "ja", "A")
 addsegment(g, "Aja", "A", "ja")
 addsegment(g, "jajiji", "ja", "jiji")

 # Y mas
 addsegment(g, "MV", "M", "V")
 addsegment(g, "VM", "V", "M")
 addsegment(g, "NO", "N", "O")
 addsegment(g, "ON", "O", "N")
 addsegment(g, "OP", "O", "P")
 addsegment(g, "PO", "P", "O")
 addsegment(g, "PQ", "P", "Q")
 addsegment(g, "QP", "Q", "P")
 addsegment(g, "QR", "Q", "R")
 addsegment(g, "RQ", "R", "Q")

 addsegment(g, "NS", "N", "S")
 addsegment(g, "SN", "S", "N")
 addsegment(g, "RT", "R", "T")
 addsegment(g, "TR", "T", "R")
 addsegment(g, "SU", "S", "U")
 addsegment(g, "US", "U", "S")
 addsegment(g, "TV", "T", "V")
 addsegment(g, "VT", "V", "T")
 addsegment(g, "UV", "U", "V")
 addsegment(g, "VU", "V", "U")

 addsegment(g, "KM", "K", "M")
 addsegment(g, "MK", "M", "K")
 addsegment(g, "LN", "L", "N")
 addsegment(g, "NL", "N", "L")
 addsegment(g, "OV", "O", "V")
 addsegment(g, "VO", "V", "O")
 addsegment(g, "PR", "P", "R")
 addsegment(g, "RP", "R", "P")
 addsegment(g, "QT", "Q", "T")
 addsegment(g, "TQ", "T", "Q")
 addsegment(g, "RU", "R", "U")
 addsegment(g, "UR", "U", "R")

 addsegment(g, "MS", "M", "S")
 addsegment(g, "SM", "S", "M")
 addsegment(g, "NT", "N", "T")
 addsegment(g, "TN", "T", "N")
 addsegment(g, "OU", "O", "U")
 addsegment(g, "UO", "U", "O")
 addsegment(g, "PV", "P", "V")
 addsegment(g, "VP", "V", "P")'''

 return g

print ("Probando el grafo...")
g = creategraph_1()
#g = load_graph_from_file("graph_data.txt")
'''plot(g)
plot_node(g, "C")
n = getclosest(g, 15, 5)
print(n.name)  # La respuesta debe ser J
n = getclosest(g, 8, 19)
print(n.name)  # La respuesta debe ser B'''